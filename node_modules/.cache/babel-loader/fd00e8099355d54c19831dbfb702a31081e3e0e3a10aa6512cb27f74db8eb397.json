{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import\"./PrayerTimings.css\";import axios from'axios';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function PrayerTimings(){const[prayerTimes,setPrayerTimes]=useState(null);const[currentDate,setCurrentDate]=useState(new Date().toISOString().split('T')[0]);const fetchData=async()=>{try{const[year,month,day]=currentDate.split('-');const response=await axios.get(\" http://api.aladhan.com/v1/timingsByCity?city=Vancouver&country=CA&method=8\");// Assuming the API returns an object with data containing prayer times\nsetPrayerTimes(response.data.data);}catch(error){console.error('Error fetching prayer times:',error);}};useEffect(()=>{fetchData();},[currentDate]);return/*#__PURE__*/_jsxs(\"div\",{className:\"PrayerTimings\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"PrayerTimings-heading\",children:[\"Prayer Times for Vancouver on \",currentDate]}),prayerTimes&&/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Fajr:\"}),\" \",prayerTimes.timings.Fajr]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Dhuhr:\"}),\" \",prayerTimes.timings.Dhuhr]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Asr:\"}),\" \",prayerTimes.timings.Asr]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Maghrib:\"}),\" \",prayerTimes.timings.Maghrib]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Isha:\"}),\" \",prayerTimes.timings.Isha]})]})]});};export default PrayerTimings;","map":{"version":3,"names":["React","useEffect","useState","axios","jsxs","_jsxs","jsx","_jsx","PrayerTimings","prayerTimes","setPrayerTimes","currentDate","setCurrentDate","Date","toISOString","split","fetchData","year","month","day","response","get","data","error","console","className","children","timings","Fajr","Dhuhr","Asr","Maghrib","Isha"],"sources":["C:/Users/abdul/Documents/Study/PeacePulse-Fron/src/HomeNoLogin/PrayerTimings.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./PrayerTimings.css\"\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nfunction PrayerTimings(){\r\nconst [prayerTimes, setPrayerTimes] = useState(null);\r\nconst [currentDate, setCurrentDate] = useState(new Date().toISOString().split('T')[0]);\r\n\r\nconst fetchData=async()=>{\r\n    try {\r\n        const [year, month, day] = currentDate.split('-');\r\n        const response = await axios.get(\r\n          ` http://api.aladhan.com/v1/timingsByCity?city=Vancouver&country=CA&method=8`\r\n        \r\n        );\r\n\r\n        // Assuming the API returns an object with data containing prayer times\r\n        setPrayerTimes(response.data.data);\r\n      } catch (error) {\r\n        console.error('Error fetching prayer times:', error);\r\n      }\r\n\r\n}\r\n\r\nuseEffect(()=>{\r\n    fetchData();\r\n},[currentDate])\r\n\r\n    return (\r\n        <div className=\"PrayerTimings\">\r\n        <h1 className=\"PrayerTimings-heading\">Prayer Times for Vancouver on {currentDate}</h1>\r\n        {prayerTimes && (\r\n          <ul>\r\n            <li>\r\n              <strong>Fajr:</strong> {prayerTimes.timings.Fajr}\r\n            </li>\r\n            <li>\r\n              <strong>Dhuhr:</strong> {prayerTimes.timings.Dhuhr}\r\n            </li>\r\n            <li>\r\n              <strong>Asr:</strong> {prayerTimes.timings.Asr}\r\n            </li>\r\n            <li>\r\n              <strong>Maghrib:</strong> {prayerTimes.timings.Maghrib}\r\n            </li>\r\n            <li>\r\n              <strong>Isha:</strong> {prayerTimes.timings.Isha}\r\n            </li>\r\n          </ul>\r\n        )}\r\n      </div>\r\n    \r\n    )\r\n};\r\nexport default PrayerTimings;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,qBAAqB,CAC5B,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,gCAAAC,GAAA,IAAAC,IAAA,yBAI1B,QAAS,CAAAC,aAAaA,CAAA,CAAE,CACxB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACS,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,GAAI,CAAAW,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAEtF,KAAM,CAAAC,SAAS,CAAC,KAAAA,CAAA,GAAS,CACrB,GAAI,CACA,KAAM,CAACC,IAAI,CAAEC,KAAK,CAAEC,GAAG,CAAC,CAAGR,WAAW,CAACI,KAAK,CAAC,GAAG,CAAC,CACjD,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAAjB,KAAK,CAACkB,GAAG,8EAGhC,CAAC,CAED;AACAX,cAAc,CAACU,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CACpC,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CAEN,CAAC,CAEDtB,SAAS,CAAC,IAAI,CACVe,SAAS,CAAC,CAAC,CACf,CAAC,CAAC,CAACL,WAAW,CAAC,CAAC,CAEZ,mBACIN,KAAA,QAAKoB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC9BrB,KAAA,OAAIoB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EAAC,gCAA8B,CAACf,WAAW,EAAK,CAAC,CACrFF,WAAW,eACVJ,KAAA,OAAAqB,QAAA,eACErB,KAAA,OAAAqB,QAAA,eACEnB,IAAA,WAAAmB,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAACjB,WAAW,CAACkB,OAAO,CAACC,IAAI,EAC9C,CAAC,cACLvB,KAAA,OAAAqB,QAAA,eACEnB,IAAA,WAAAmB,QAAA,CAAQ,QAAM,CAAQ,CAAC,IAAC,CAACjB,WAAW,CAACkB,OAAO,CAACE,KAAK,EAChD,CAAC,cACLxB,KAAA,OAAAqB,QAAA,eACEnB,IAAA,WAAAmB,QAAA,CAAQ,MAAI,CAAQ,CAAC,IAAC,CAACjB,WAAW,CAACkB,OAAO,CAACG,GAAG,EAC5C,CAAC,cACLzB,KAAA,OAAAqB,QAAA,eACEnB,IAAA,WAAAmB,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAACjB,WAAW,CAACkB,OAAO,CAACI,OAAO,EACpD,CAAC,cACL1B,KAAA,OAAAqB,QAAA,eACEnB,IAAA,WAAAmB,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAACjB,WAAW,CAACkB,OAAO,CAACK,IAAI,EAC9C,CAAC,EACH,CACL,EACE,CAAC,CAGZ,CAAC,CACD,cAAe,CAAAxB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}