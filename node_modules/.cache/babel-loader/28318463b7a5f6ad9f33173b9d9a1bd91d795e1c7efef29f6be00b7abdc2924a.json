{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdul\\\\Documents\\\\Study\\\\web development\\\\prayer App\\\\PeacePulse-Fron\\\\peae-pulse\\\\peace-pulse\\\\src\\\\Read\\\\ReadSurah.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ReadSurah.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReadSurah({\n  surahNumber\n}) {\n  _s();\n  const [surah, setSurah] = useState([]);\n  const fetchSurah = async () => {\n    try {\n      const response = await axios.get(`https://api.alquran.cloud/v1/surah/${surahNumber}`);\n      console.log('API Response:', response);\n      setSurah(response.data.data.ayahs);\n      console.log(surahNumber);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchSurah();\n  }, [surahNumber]);\n  const convertToArabicNumber = number => {\n    const arabicNumbers = [\"۰\", \"۱\", \"۲\", \"۳\", \"٤\", \"۵\", \"٦\", \"۷\", \"۸\", \"۹\"];\n    const digits = number.toString().split(\"\"); // Separate each digit\n    const arabicDigits = digits.map(digit => arabicNumbers[parseInt(digit)]);\n    return arabicDigits.join(\"\"); // Join the Arabic digits together\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadQuran-container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"rtl-text\",\n      children: surah.map(ayah => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [ayah.text, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"arabic_number\",\n          children: convertToArabicNumber(ayah.numberInSurah)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, ayah.numberInSurah, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 8\n  }, this);\n}\n_s(ReadSurah, \"9zHzDyIXI57OGEOAhjP9Fff8pX4=\");\n_c = ReadSurah;\n;\nexport default ReadSurah;\nvar _c;\n$RefreshReg$(_c, \"ReadSurah\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ReadSurah","surahNumber","_s","surah","setSurah","fetchSurah","response","get","console","log","data","ayahs","error","convertToArabicNumber","number","arabicNumbers","digits","toString","split","arabicDigits","map","digit","parseInt","join","className","children","ayah","text","numberInSurah","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/abdul/Documents/Study/web development/prayer App/PeacePulse-Fron/peae-pulse/peace-pulse/src/Read/ReadSurah.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ReadSurah.css\";\r\n\r\n\r\nfunction ReadSurah({ surahNumber }){\r\n    const[surah,setSurah]=useState([])\r\n   \r\n\r\n    const fetchSurah=async()=>{\r\n        try\r\n        {\r\n            const response=await axios.get\r\n            (`https://api.alquran.cloud/v1/surah/${surahNumber}`);\r\n            console.log('API Response:', response);\r\n            setSurah(response.data.data.ayahs)\r\n           console.log(surahNumber)\r\n        } \r\n        catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n       \r\n    }\r\n    useEffect(() => {\r\n        fetchSurah();\r\n      }, [surahNumber]);\r\n\r\n      const convertToArabicNumber = (number) => {\r\n        const arabicNumbers = [\"۰\", \"۱\", \"۲\", \"۳\", \"٤\", \"۵\", \"٦\", \"۷\", \"۸\", \"۹\"];\r\n        const digits = number.toString().split(\"\"); // Separate each digit\r\n        const arabicDigits = digits.map((digit) => arabicNumbers[parseInt(digit)]);\r\n        return arabicDigits.join(\"\"); // Join the Arabic digits together\r\n      };\r\n      \r\n    return(\r\n       <div className=\"ReadQuran-container\">\r\n        <ul className=\"rtl-text\">\r\n            \r\n            {surah.map((ayah)=>(\r\n                <li key={ayah.numberInSurah}>\r\n                    \r\n                    {ayah.text}\r\n                    <span className=\"arabic_number\">\r\n                        {convertToArabicNumber(ayah.numberInSurah)} \r\n                    </span>\r\n                    \r\n                </li>\r\n            \r\n            ))}\r\n        </ul>\r\n       </div>\r\n    )\r\n};\r\nexport default ReadSurah;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzB,SAASC,SAASA,CAAC;EAAEC;AAAY,CAAC,EAAC;EAAAC,EAAA;EAC/B,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAGlC,MAAMS,UAAU,GAAC,MAAAA,CAAA,KAAS;IACtB,IACA;MACI,MAAMC,QAAQ,GAAC,MAAMT,KAAK,CAACU,GAAG,CAC5B,sCAAqCN,WAAY,EAAC,CAAC;MACrDO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAAC;MACtCF,QAAQ,CAACE,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACC,KAAK,CAAC;MACnCH,OAAO,CAACC,GAAG,CAACR,WAAW,CAAC;IAC3B,CAAC,CACD,OAAOW,KAAK,EAAE;MACVJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EAEJ,CAAC;EACDjB,SAAS,CAAC,MAAM;IACZU,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAEjB,MAAMY,qBAAqB,GAAIC,MAAM,IAAK;IACxC,MAAMC,aAAa,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACxE,MAAMC,MAAM,GAAGF,MAAM,CAACG,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,MAAMC,YAAY,GAAGH,MAAM,CAACI,GAAG,CAAEC,KAAK,IAAKN,aAAa,CAACO,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC;IAC1E,OAAOF,YAAY,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EAChC,CAAC;EAEH,oBACGxB,OAAA;IAAKyB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eACnC1B,OAAA;MAAIyB,SAAS,EAAC,UAAU;MAAAC,QAAA,EAEnBtB,KAAK,CAACiB,GAAG,CAAEM,IAAI,iBACZ3B,OAAA;QAAA0B,QAAA,GAEKC,IAAI,CAACC,IAAI,eACV5B,OAAA;UAAMyB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC1BZ,qBAAqB,CAACa,IAAI,CAACE,aAAa;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA,GALFN,IAAI,CAACE,aAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOvB,CAEP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb;AAAC9B,EAAA,CA/CQF,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AA+CjB;AACD,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}